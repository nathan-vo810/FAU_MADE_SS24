// Author: Nguyen Nhat Anh Vo - 23397969
// Exercise 45
// Build an automated data pipeline for the following source:
// https://gtfs.rhoenenergie-bus.de/GTFS.zip
// Goal
// - Work with domain-specific GTFS data
// - Pick out only stops (from stops.txt)
// --- Only the columns stop_id, stop_name, stop_lat, stop_lon, zone_id with fitting data types
// - Filter data
// --- Only keep stops from zone 1645
// - Validate data
// --- stop_name must be a text but must maintain german umlauts
// --- stop_lat/stop_lon must be a geographic coordinates between -90 and 90, including upper/lower bounds
// --- Drop rows containing invalid data
// - Use fitting SQLite types (e.g., BIGINT, TEXT or FLOAT) for all columns
// - Write data into a SQLite database called “gtfs.sqlite”, in the table “stops”

constraint geo_constraint oftype RangeConstraint {
    lowerBound: -90;
    upperBound: 90;
}

valuetype coordinate oftype decimal {
    constraints: [geo_constraint];
}

constraint zone_1645 on integer:
    value == 1645;

valuetype zone oftype integer {
    constraints: [zone_1645];
}

pipeline GTFSPipeline {
    DataExtractor ->
    GTFSArchiveInterpreter ->
    StopsFilePicker ->
    StopsFileInterpreter ->
    StopsCSVFileInterpreter ->
    StopsTableInterpreter ->
    StopsTableLoader;

    block DataExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block GTFSArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block StopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    block StopsFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block StopsCSVFileInterpreter oftype CSVInterpreter {
        delimiter: ",";
        enclosing: '"';
    }

    block StopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype coordinate,
            "stop_lon" oftype coordinate, 
            "zone_id" oftype zone
        ];
    }

    block StopsTableLoader oftype SQLiteLoader {
        table: "stops";
        file: "gtfs.sqlite";
    }
}